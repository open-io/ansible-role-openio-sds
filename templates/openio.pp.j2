class {'openiosds':}
openiosds::namespace {'{{ openio_namespace }}':
  ns             => '{{ openio_namespace }}',
  conscience_url => "{{ conscience_ip }}:6000",
{% if openio_zk_cluster_ip -%}
  zookeeper_url  => "{% for ip in openio_zk_cluster_ip %}{{ ip }}:6005{% if not loop.last %},{% endif %}{% endfor %}",
{% endif %}
  oioproxy_url   => "{{ openio_network_private_ipaddress }}:6006",
  eventagent_url => "beanstalk://{{ openio_network_private_ipaddress }}:6014",
  meta1_digits   => {{ openio_meta1_digits }},
  ns_storage_policy => '{{ openio_storage_policy }}',
  ns_service_update_policy => {{ openio_service_update_policy }},
  ns_chunk_size => "{{ openio_chunk_size }}",
}
openiosds::oioproxy {'oioproxy-1':
  num       => 1,
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
}
openiosds::conscienceagent {'conscienceagent-1':
  num => 1,
  ns  => '{{ openio_namespace }}',
}
openiosds::oioeventagent {'oio-event-agent-1':
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  {%- if openio_oioeventagent_workers is defined %}
  workers => {{ openio_oioeventagent_workers }},
  {%- endif %}
}
{# Loop over openio_metadata_mounts for metadata services #}
{% for partition in openio_metadata_mounts %}
  {%- if loop.index == 1 %}
openiosds::beanstalkd {'beanstalkd-1':
  num       => 1,
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  binlogdir => "{{ partition.mountpoint }}/{{ openio_namespace }}/beanstalkd-1",
}
  {%- endif %}
  {%- if 'openio_directory_m0' in group_names and loop.index == 1 %}

### Directory
openiosds::meta0 {'meta0-1':
  num       => 1,
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  volume    => "{{ partition.mountpoint }}/{{ openio_namespace }}/meta0-1",
}
  {%- endif %}
  {%- if 'openio_directory_m1' in group_names %}

openiosds::meta1 {'meta1-{{ loop.index }}':
  num       => {{ loop.index }},
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  port      => {{ 6110 + loop.index }},
  volume    => "{{ partition.mountpoint }}/{{ openio_namespace }}/meta1-{{ loop.index }}",
}
  {%- endif %}
  {%- if 'openio_directory_m2' in group_names %}

openiosds::meta2 {'meta2-{{ loop.index }}':
  num       => {{ loop.index }},
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  port      => {{ 6120 + loop.index }},
  volume    => "{{ partition.mountpoint }}/{{ openio_namespace }}/meta2-{{ loop.index }}",
}
  {%- endif %}
  {%- if 'openio_zk_cluster' in group_names and loop.index == 1 %}

###  ZooKeeper
openiosds::zookeeper {'zookeeper-1':
  num       => 1,
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  servers   => [{% for ip in openio_zk_cluster_ip %}'{{ ip }}:2888:3888'{% if not loop.last %},{% endif %}{% endfor %}],
  dataDir   => "{{ partition.mountpoint }}/{{ openio_namespace }}/zookeeper-1",
}
  {%- endif %}
  {%- if 'openio_account' in group_names and loop.index == 1 %}

### Account
openiosds::account {'account-1':
  num                  => 1,
  ns                   => '{{ openio_namespace }}',
  ipaddress            => "{{ openio_network_private_ipaddress }}",
  sentinel_hosts       => '{% for ip  in openio_redis_cluster_ip %}{{ ip }}:6012{% if not loop.last %},{% endif %}{% endfor %}',
  sentinel_master_name => '{{ openio_namespace }}-master-1',
}
  {%- endif %}
  {%- if 'openio_redis_cluster' in group_names and loop.index == 1 %}

### Redis
openiosds::redissentinel {'redissentinel-1':
  num         => 1,
  ns          => '{{ openio_namespace }}',
  ipaddress   => "{{ openio_network_private_ipaddress }}",
  dir         => "{{ partition.mountpoint }}/{{ openio_namespace }}/redissentinel-1",
  master_name => '{{ openio_namespace }}-master-1',
  redis_host  => "{{ openio_redis_cluster_ip[0] }}",
}
openiosds::redis {'redis-1':
  num       => 1,
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  dir       => "{{ partition.mountpoint }}/{{ openio_namespace }}/redis-1",
  {%- if openio_network_private_ipaddress != openio_redis_cluster_ip[0] %}

  slaveof   => '{{ openio_redis_cluster_ip[0] }} 6011',
  {%- endif %}

}
  {%- endif %}
{%- endfor %}
{# end loop #}
{# Loop over openio_data_mounts for data services #}
{%- for partition in openio_data_mounts %}
  {%- if 'openio_rawx' in group_names %}

### Data services {{ loop.index }}
openiosds::rawx {'rawx-{{ loop.index }}':
  num          => {{ loop.index }},
  ns           => '{{ openio_namespace }}',
  ipaddress    => "{{ openio_network_private_ipaddress }}",
  port         => {{ 6200 + loop.index }},
  documentRoot => "{{ partition.mountpoint }}/{{ openio_namespace }}/rawx-{{ loop.index }}",
  httpd_mpm    => {{ openio_rawx_mpm }},
  {%- if openio_rawx_accurate_location %}
  location  => "${hostname}.{{ loop.index }}",
  {%- endif %}
}
openiosds::rdir {'rdir-{{ loop.index }}':
  num       => {{ loop.index }},
  ns        => '{{ openio_namespace }}',
  ipaddress => "{{ openio_network_private_ipaddress }}",
  port      => {{ 6300 + loop.index }},
  db_path   => "{{ partition.mountpoint }}/{{ openio_namespace }}/rdir-{{ loop.index }}",
}
openiosds::oioblobindexer {'oio-blob-indexer-rawx-{{ loop.index }}':
  num    => {{ loop.index }},
  ns     => '{{ openio_namespace }}',
  volume => "{{ partition.mountpoint }}/{{ openio_namespace }}/rawx-{{ loop.index }}",
  chunks_per_second => '{{ openio_rdir_chunks_per_second }}',
}
  {%- endif %}
{%- endfor %}
{# end loop #}
{%- if 'openio_conscience' in group_names %}

### Conscience
openiosds::conscience {'conscience-1':
  num                   => 1,
  ns                    => '{{ openio_namespace }}',
  ipaddress             => "{{ openio_network_private_ipaddress }}",
}
{%- endif %}
{%- if 'openio_swift' in group_names %}

openiosds::oioswift {'oioswift-1':
  num               => 1,
  ns                => '{{ openio_namespace }}',
  ipaddress         => '{{ openio_network_public_ipaddress }}',
  workers           => {{ openio_swift_workers }},
  sds_proxy_url     => 'http://{{ openio_network_private_ipaddress }}:6006',
  auth_system       => '{{ openio_swift_auth_system }}',
  region_name       => '{{ openio_swift_region_name }}',
  middleware_swift3 => {{ openio_swift_middleware_swift3 }},
  {%- if openio_keystone_auth_uri is defined %}

  auth_uri          => '{{ openio_keystone_auth_uri }}',
  {%- endif %}
  {%- if openio_keystone_auth_url is defined %}

  auth_url          => '{{ openio_keystone_auth_url }}',
  {%- endif %}
  {%- if openio_sds_pool_connections is defined %}

  sds_pool_connections => '{{ openio_sds_pool_connections }}',
  {%- endif %}
  {%- if openio_sds_pool_maxsize is defined %}

  sds_pool_maxsize => '{{ openio_sds_pool_maxsize }}',
  {%- endif %}
  {%- if openio_swift_middleware_containerhierarchy is defined  and openio_swift_middleware_containerhierarchy %}

  middleware_containerhierarchy => true,
  {%- endif %}
  {%- if openio_swift_tempauth_users is defined %}

  tempauth_users   => {{ openio_swift_tempauth_users }},
  {%- endif %}

  memcache_servers => '{{ openio_network_private_ipaddress }}:6019',
  memcache_max_connections => 500,
}
openiosds::memcached {'memcached-1':
  num       => 1,
  ns        => '{{ openio_namespace }}',
  ipaddress => '{{ openio_network_private_ipaddress }}',
}
{%- endif %}
