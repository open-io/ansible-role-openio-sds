---
- name: "Applying Puppet manifest for namespace {{ openio_namespace }}"
  command: "{{ openio_puppet_apply }} {{ openio_puppet_manifest }}/{{ openio_namespace|lower }}.pp"
  register: puppet_result
  changed_when: puppet_result.rc == 2

- name: Check ZooKeeper status
  shell: "echo \"ls /hc/ns/{{ openio_namespace }}\" | {{ openio_zookeeper_cli_path }} -server {{ openio_zk_cluster_ip[0] }}:6005 2>/dev/null | grep -qe srv"
  register: openio_zk_status
  ignore_errors: yes
  when:
    - inventory_hostname == groups['openio_zk_cluster'][0]

- name: "Bootstrapping ZooKeeper for namespace {{ openio_namespace }}"
  command: "{{ openio_zookeeper_bootstrap_cmd }} {{ openio_namespace }} {{ openio_zookeeper_bootstrap_options }}"
  when:
    - inventory_hostname == groups['openio_zk_cluster'][0]
      and  openio_zk_status.rc != 0

- name: "Unlocking namespace {{ openio_namespace }}"
  command: "{{ openio_cli_path }} --oio-ns={{ openio_namespace }} cluster unlockall"
  when:
    - inventory_hostname == groups['openio_conscience'][0]

- name: Waiting for scores to increase
  pause:
    seconds: 10

- name: "Bootstrapping OpenIO namespace {{ openio_namespace }} with {{ openio_replicas }} replicas"
  command: "{{ openio_cli_path }} --oio-ns={{ openio_namespace }} directory bootstrap --replicas {{ openio_replicas }} --no-rdir"
  when:
    - inventory_hostname == groups['openio_conscience'][0]

- name: Update meta0 services
  command: "{{ openio_gridinit_cmd }} restart @meta0"
  when:
    - inventory_hostname == groups['openio_directory_m0']

- name: Update meta1 services
  command: "{{ openio_gridinit_cmd }} restart @meta1"
  when:
    - inventory_hostname == groups['openio_directory_m1']

- name: "Starting services for namespace {{ openio_namespace }}"
  command: "{{ openio_gridinit_cmd }} start"

- name: "Unlocking namespace {{ openio_namespace }}"
  command: "{{ openio_cli_path }} --oio-ns={{ openio_namespace }} cluster unlockall"
  when:
    - inventory_hostname == groups['openio_conscience'][0]

- name: "Bootstrapping Reverse Directory for namespace {{ openio_namespace }}"
  command: "{{ openio_cli_path }} --oio-ns={{ openio_namespace }} volume admin bootstrap"
  when:
    - inventory_hostname == groups['openio_conscience'][0]
...
